name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      arangodb:
        image: arangodb:latest
        env:
          ARANGO_ROOT_PASSWORD: test_password
        ports:
          - 8529:8529
        options: >-
          --health-cmd "curl -f http://localhost:8529/_api/version || exit 1"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      
      qdrant:
        image: qdrant/qdrant:latest
        ports:
          - 6333:6333
        options: >-
          --health-cmd "curl -f http://localhost:6333/health || exit 1"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Install uv
        uses: astral-sh/setup-uv@v3
        with:
          version: "latest"
      
      - name: Set up Python
        run: uv python install 3.11
      
      - name: Install dependencies
        run: uv sync --all-extras
      
      - name: Create .env for tests
        run: |
          cat > .env << EOF
          DEEPSEEK_API_KEY=test_key_not_used_in_unit_tests
          ARANGO_HOST=http://localhost:8529
          ARANGO_DB_NAME=tenant_legal_kg_test
          ARANGO_USERNAME=root
          ARANGO_PASSWORD=test_password
          QDRANT_URL=http://localhost:6333
          QDRANT_COLLECTION=legal_chunks_test
          EOF
      
      - name: Wait for services
        run: |
          timeout 60 sh -c 'until curl -f http://localhost:8529/_api/version; do sleep 2; done'
          timeout 60 sh -c 'until curl -f http://localhost:6333/health; do sleep 2; done'
      
      - name: Run linting
        run: |
          uv run ruff check tenant_legal_guidance --exclude tenant_legal_guidance/tests
        continue-on-error: true
      
      - name: Run unit tests
        run: uv run pytest tenant_legal_guidance/tests -v --tb=short -m "not slow"
        env:
          PYTEST_CURRENT_TEST: "true"
      
      - name: Run integration tests
        run: uv run pytest tests/integration -v --tb=short
        if: github.event_name == 'push'
        env:
          PYTEST_CURRENT_TEST: "true"
      
      - name: Check test coverage
        run: |
          uv run pytest tenant_legal_guidance/tests tests/integration \
            --cov=tenant_legal_guidance \
            --cov-report=term-missing \
            --cov-report=xml \
            --cov-fail-under=50
        continue-on-error: true
      
      - name: Upload coverage reports
        uses: codecov/codecov-action@v3
        if: github.event_name == 'push'
        with:
          files: ./coverage.xml
          flags: unittests
          name: codecov-umbrella
        continue-on-error: true

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Install uv
        uses: astral-sh/setup-uv@v3
      
      - name: Set up Python
        run: uv python install 3.11
      
      - name: Install dependencies
        run: uv sync
      
      - name: Run ruff
        run: uv run ruff check .
        continue-on-error: true
      
      - name: Run black check
        run: uv run black --check .
        continue-on-error: true
      
      - name: Run mypy
        run: uv run mypy tenant_legal_guidance --ignore-missing-imports
        continue-on-error: true

